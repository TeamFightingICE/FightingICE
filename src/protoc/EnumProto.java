// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enum.proto

package protoc;

public final class EnumProto {
  private EnumProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code service.GrpcStatusCode}
   */
  public enum GrpcStatusCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>SUCCESS = 0;</code>
     */
    SUCCESS(0),
    /**
     * <code>FAILED = 1;</code>
     */
    FAILED(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>SUCCESS = 0;</code>
     */
    public static final int SUCCESS_VALUE = 0;
    /**
     * <code>FAILED = 1;</code>
     */
    public static final int FAILED_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GrpcStatusCode valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GrpcStatusCode forNumber(int value) {
      switch (value) {
        case 0: return SUCCESS;
        case 1: return FAILED;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GrpcStatusCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GrpcStatusCode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GrpcStatusCode>() {
            public GrpcStatusCode findValueByNumber(int number) {
              return GrpcStatusCode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protoc.EnumProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final GrpcStatusCode[] VALUES = values();

    public static GrpcStatusCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GrpcStatusCode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:service.GrpcStatusCode)
  }

  /**
   * Protobuf enum {@code service.GrpcFlag}
   */
  public enum GrpcFlag
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EMPTY = 0;</code>
     */
    EMPTY(0),
    /**
     * <code>INITIALIZE = 1;</code>
     */
    INITIALIZE(1),
    /**
     * <code>INIT_ROUND = 2;</code>
     */
    INIT_ROUND(2),
    /**
     * <code>PROCESSING = 3;</code>
     */
    PROCESSING(3),
    /**
     * <code>ROUND_END = 4;</code>
     */
    ROUND_END(4),
    /**
     * <code>GAME_END = 5;</code>
     */
    GAME_END(5),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>EMPTY = 0;</code>
     */
    public static final int EMPTY_VALUE = 0;
    /**
     * <code>INITIALIZE = 1;</code>
     */
    public static final int INITIALIZE_VALUE = 1;
    /**
     * <code>INIT_ROUND = 2;</code>
     */
    public static final int INIT_ROUND_VALUE = 2;
    /**
     * <code>PROCESSING = 3;</code>
     */
    public static final int PROCESSING_VALUE = 3;
    /**
     * <code>ROUND_END = 4;</code>
     */
    public static final int ROUND_END_VALUE = 4;
    /**
     * <code>GAME_END = 5;</code>
     */
    public static final int GAME_END_VALUE = 5;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GrpcFlag valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GrpcFlag forNumber(int value) {
      switch (value) {
        case 0: return EMPTY;
        case 1: return INITIALIZE;
        case 2: return INIT_ROUND;
        case 3: return PROCESSING;
        case 4: return ROUND_END;
        case 5: return GAME_END;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GrpcFlag>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GrpcFlag> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GrpcFlag>() {
            public GrpcFlag findValueByNumber(int number) {
              return GrpcFlag.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protoc.EnumProto.getDescriptor().getEnumTypes().get(1);
    }

    private static final GrpcFlag[] VALUES = values();

    public static GrpcFlag valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GrpcFlag(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:service.GrpcFlag)
  }

  /**
   * Protobuf enum {@code service.GrpcState}
   */
  public enum GrpcState
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STAND_STATE = 0;</code>
     */
    STAND_STATE(0),
    /**
     * <code>CROUCH_STATE = 1;</code>
     */
    CROUCH_STATE(1),
    /**
     * <code>AIR_STATE = 2;</code>
     */
    AIR_STATE(2),
    /**
     * <code>DOWN_STATE = 3;</code>
     */
    DOWN_STATE(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>STAND_STATE = 0;</code>
     */
    public static final int STAND_STATE_VALUE = 0;
    /**
     * <code>CROUCH_STATE = 1;</code>
     */
    public static final int CROUCH_STATE_VALUE = 1;
    /**
     * <code>AIR_STATE = 2;</code>
     */
    public static final int AIR_STATE_VALUE = 2;
    /**
     * <code>DOWN_STATE = 3;</code>
     */
    public static final int DOWN_STATE_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GrpcState valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GrpcState forNumber(int value) {
      switch (value) {
        case 0: return STAND_STATE;
        case 1: return CROUCH_STATE;
        case 2: return AIR_STATE;
        case 3: return DOWN_STATE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GrpcState>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GrpcState> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GrpcState>() {
            public GrpcState findValueByNumber(int number) {
              return GrpcState.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protoc.EnumProto.getDescriptor().getEnumTypes().get(2);
    }

    private static final GrpcState[] VALUES = values();

    public static GrpcState valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GrpcState(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:service.GrpcState)
  }

  /**
   * Protobuf enum {@code service.GrpcAction}
   */
  public enum GrpcAction
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>NEUTRAL = 0;</code>
     */
    NEUTRAL(0),
    /**
     * <code>STAND = 1;</code>
     */
    STAND(1),
    /**
     * <code>FORWARD_WALK = 2;</code>
     */
    FORWARD_WALK(2),
    /**
     * <code>DASH = 3;</code>
     */
    DASH(3),
    /**
     * <code>BACK_STEP = 4;</code>
     */
    BACK_STEP(4),
    /**
     * <code>CROUCH = 5;</code>
     */
    CROUCH(5),
    /**
     * <code>JUMP = 6;</code>
     */
    JUMP(6),
    /**
     * <code>FOR_JUMP = 7;</code>
     */
    FOR_JUMP(7),
    /**
     * <code>BACK_JUMP = 8;</code>
     */
    BACK_JUMP(8),
    /**
     * <code>AIR = 9;</code>
     */
    AIR(9),
    /**
     * <code>STAND_GUARD = 10;</code>
     */
    STAND_GUARD(10),
    /**
     * <code>CROUCH_GUARD = 11;</code>
     */
    CROUCH_GUARD(11),
    /**
     * <code>AIR_GUARD = 12;</code>
     */
    AIR_GUARD(12),
    /**
     * <code>STAND_GUARD_RECOV = 13;</code>
     */
    STAND_GUARD_RECOV(13),
    /**
     * <code>CROUCH_GUARD_RECOV = 14;</code>
     */
    CROUCH_GUARD_RECOV(14),
    /**
     * <code>AIR_GUARD_RECOV = 15;</code>
     */
    AIR_GUARD_RECOV(15),
    /**
     * <code>STAND_RECOV = 16;</code>
     */
    STAND_RECOV(16),
    /**
     * <code>CROUCH_RECOV = 17;</code>
     */
    CROUCH_RECOV(17),
    /**
     * <code>AIR_RECOV = 18;</code>
     */
    AIR_RECOV(18),
    /**
     * <code>CHANGE_DOWN = 19;</code>
     */
    CHANGE_DOWN(19),
    /**
     * <code>DOWN = 20;</code>
     */
    DOWN(20),
    /**
     * <code>RISE = 21;</code>
     */
    RISE(21),
    /**
     * <code>LANDING = 22;</code>
     */
    LANDING(22),
    /**
     * <code>THROW_A = 23;</code>
     */
    THROW_A(23),
    /**
     * <code>THROW_B = 24;</code>
     */
    THROW_B(24),
    /**
     * <code>THROW_HIT = 25;</code>
     */
    THROW_HIT(25),
    /**
     * <code>THROW_SUFFER = 26;</code>
     */
    THROW_SUFFER(26),
    /**
     * <code>STAND_A = 27;</code>
     */
    STAND_A(27),
    /**
     * <code>STAND_B = 28;</code>
     */
    STAND_B(28),
    /**
     * <code>CROUCH_A = 29;</code>
     */
    CROUCH_A(29),
    /**
     * <code>CROUCH_B = 30;</code>
     */
    CROUCH_B(30),
    /**
     * <code>AIR_A = 31;</code>
     */
    AIR_A(31),
    /**
     * <code>AIR_B = 32;</code>
     */
    AIR_B(32),
    /**
     * <code>AIR_DA = 33;</code>
     */
    AIR_DA(33),
    /**
     * <code>AIR_DB = 34;</code>
     */
    AIR_DB(34),
    /**
     * <code>STAND_FA = 35;</code>
     */
    STAND_FA(35),
    /**
     * <code>STAND_FB = 36;</code>
     */
    STAND_FB(36),
    /**
     * <code>CROUCH_FA = 37;</code>
     */
    CROUCH_FA(37),
    /**
     * <code>CROUCH_FB = 38;</code>
     */
    CROUCH_FB(38),
    /**
     * <code>AIR_FA = 39;</code>
     */
    AIR_FA(39),
    /**
     * <code>AIR_FB = 40;</code>
     */
    AIR_FB(40),
    /**
     * <code>AIR_UA = 41;</code>
     */
    AIR_UA(41),
    /**
     * <code>AIR_UB = 42;</code>
     */
    AIR_UB(42),
    /**
     * <code>STAND_D_DF_FA = 43;</code>
     */
    STAND_D_DF_FA(43),
    /**
     * <code>STAND_D_DF_FB = 44;</code>
     */
    STAND_D_DF_FB(44),
    /**
     * <code>STAND_F_D_DFA = 45;</code>
     */
    STAND_F_D_DFA(45),
    /**
     * <code>STAND_F_D_DFB = 46;</code>
     */
    STAND_F_D_DFB(46),
    /**
     * <code>STAND_D_DB_BA = 47;</code>
     */
    STAND_D_DB_BA(47),
    /**
     * <code>STAND_D_DB_BB = 48;</code>
     */
    STAND_D_DB_BB(48),
    /**
     * <code>AIR_D_DF_FA = 49;</code>
     */
    AIR_D_DF_FA(49),
    /**
     * <code>AIR_D_DF_FB = 50;</code>
     */
    AIR_D_DF_FB(50),
    /**
     * <code>AIR_F_D_DFA = 51;</code>
     */
    AIR_F_D_DFA(51),
    /**
     * <code>AIR_F_D_DFB = 52;</code>
     */
    AIR_F_D_DFB(52),
    /**
     * <code>AIR_D_DB_BA = 53;</code>
     */
    AIR_D_DB_BA(53),
    /**
     * <code>AIR_D_DB_BB = 54;</code>
     */
    AIR_D_DB_BB(54),
    /**
     * <code>STAND_D_DF_FC = 55;</code>
     */
    STAND_D_DF_FC(55),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>NEUTRAL = 0;</code>
     */
    public static final int NEUTRAL_VALUE = 0;
    /**
     * <code>STAND = 1;</code>
     */
    public static final int STAND_VALUE = 1;
    /**
     * <code>FORWARD_WALK = 2;</code>
     */
    public static final int FORWARD_WALK_VALUE = 2;
    /**
     * <code>DASH = 3;</code>
     */
    public static final int DASH_VALUE = 3;
    /**
     * <code>BACK_STEP = 4;</code>
     */
    public static final int BACK_STEP_VALUE = 4;
    /**
     * <code>CROUCH = 5;</code>
     */
    public static final int CROUCH_VALUE = 5;
    /**
     * <code>JUMP = 6;</code>
     */
    public static final int JUMP_VALUE = 6;
    /**
     * <code>FOR_JUMP = 7;</code>
     */
    public static final int FOR_JUMP_VALUE = 7;
    /**
     * <code>BACK_JUMP = 8;</code>
     */
    public static final int BACK_JUMP_VALUE = 8;
    /**
     * <code>AIR = 9;</code>
     */
    public static final int AIR_VALUE = 9;
    /**
     * <code>STAND_GUARD = 10;</code>
     */
    public static final int STAND_GUARD_VALUE = 10;
    /**
     * <code>CROUCH_GUARD = 11;</code>
     */
    public static final int CROUCH_GUARD_VALUE = 11;
    /**
     * <code>AIR_GUARD = 12;</code>
     */
    public static final int AIR_GUARD_VALUE = 12;
    /**
     * <code>STAND_GUARD_RECOV = 13;</code>
     */
    public static final int STAND_GUARD_RECOV_VALUE = 13;
    /**
     * <code>CROUCH_GUARD_RECOV = 14;</code>
     */
    public static final int CROUCH_GUARD_RECOV_VALUE = 14;
    /**
     * <code>AIR_GUARD_RECOV = 15;</code>
     */
    public static final int AIR_GUARD_RECOV_VALUE = 15;
    /**
     * <code>STAND_RECOV = 16;</code>
     */
    public static final int STAND_RECOV_VALUE = 16;
    /**
     * <code>CROUCH_RECOV = 17;</code>
     */
    public static final int CROUCH_RECOV_VALUE = 17;
    /**
     * <code>AIR_RECOV = 18;</code>
     */
    public static final int AIR_RECOV_VALUE = 18;
    /**
     * <code>CHANGE_DOWN = 19;</code>
     */
    public static final int CHANGE_DOWN_VALUE = 19;
    /**
     * <code>DOWN = 20;</code>
     */
    public static final int DOWN_VALUE = 20;
    /**
     * <code>RISE = 21;</code>
     */
    public static final int RISE_VALUE = 21;
    /**
     * <code>LANDING = 22;</code>
     */
    public static final int LANDING_VALUE = 22;
    /**
     * <code>THROW_A = 23;</code>
     */
    public static final int THROW_A_VALUE = 23;
    /**
     * <code>THROW_B = 24;</code>
     */
    public static final int THROW_B_VALUE = 24;
    /**
     * <code>THROW_HIT = 25;</code>
     */
    public static final int THROW_HIT_VALUE = 25;
    /**
     * <code>THROW_SUFFER = 26;</code>
     */
    public static final int THROW_SUFFER_VALUE = 26;
    /**
     * <code>STAND_A = 27;</code>
     */
    public static final int STAND_A_VALUE = 27;
    /**
     * <code>STAND_B = 28;</code>
     */
    public static final int STAND_B_VALUE = 28;
    /**
     * <code>CROUCH_A = 29;</code>
     */
    public static final int CROUCH_A_VALUE = 29;
    /**
     * <code>CROUCH_B = 30;</code>
     */
    public static final int CROUCH_B_VALUE = 30;
    /**
     * <code>AIR_A = 31;</code>
     */
    public static final int AIR_A_VALUE = 31;
    /**
     * <code>AIR_B = 32;</code>
     */
    public static final int AIR_B_VALUE = 32;
    /**
     * <code>AIR_DA = 33;</code>
     */
    public static final int AIR_DA_VALUE = 33;
    /**
     * <code>AIR_DB = 34;</code>
     */
    public static final int AIR_DB_VALUE = 34;
    /**
     * <code>STAND_FA = 35;</code>
     */
    public static final int STAND_FA_VALUE = 35;
    /**
     * <code>STAND_FB = 36;</code>
     */
    public static final int STAND_FB_VALUE = 36;
    /**
     * <code>CROUCH_FA = 37;</code>
     */
    public static final int CROUCH_FA_VALUE = 37;
    /**
     * <code>CROUCH_FB = 38;</code>
     */
    public static final int CROUCH_FB_VALUE = 38;
    /**
     * <code>AIR_FA = 39;</code>
     */
    public static final int AIR_FA_VALUE = 39;
    /**
     * <code>AIR_FB = 40;</code>
     */
    public static final int AIR_FB_VALUE = 40;
    /**
     * <code>AIR_UA = 41;</code>
     */
    public static final int AIR_UA_VALUE = 41;
    /**
     * <code>AIR_UB = 42;</code>
     */
    public static final int AIR_UB_VALUE = 42;
    /**
     * <code>STAND_D_DF_FA = 43;</code>
     */
    public static final int STAND_D_DF_FA_VALUE = 43;
    /**
     * <code>STAND_D_DF_FB = 44;</code>
     */
    public static final int STAND_D_DF_FB_VALUE = 44;
    /**
     * <code>STAND_F_D_DFA = 45;</code>
     */
    public static final int STAND_F_D_DFA_VALUE = 45;
    /**
     * <code>STAND_F_D_DFB = 46;</code>
     */
    public static final int STAND_F_D_DFB_VALUE = 46;
    /**
     * <code>STAND_D_DB_BA = 47;</code>
     */
    public static final int STAND_D_DB_BA_VALUE = 47;
    /**
     * <code>STAND_D_DB_BB = 48;</code>
     */
    public static final int STAND_D_DB_BB_VALUE = 48;
    /**
     * <code>AIR_D_DF_FA = 49;</code>
     */
    public static final int AIR_D_DF_FA_VALUE = 49;
    /**
     * <code>AIR_D_DF_FB = 50;</code>
     */
    public static final int AIR_D_DF_FB_VALUE = 50;
    /**
     * <code>AIR_F_D_DFA = 51;</code>
     */
    public static final int AIR_F_D_DFA_VALUE = 51;
    /**
     * <code>AIR_F_D_DFB = 52;</code>
     */
    public static final int AIR_F_D_DFB_VALUE = 52;
    /**
     * <code>AIR_D_DB_BA = 53;</code>
     */
    public static final int AIR_D_DB_BA_VALUE = 53;
    /**
     * <code>AIR_D_DB_BB = 54;</code>
     */
    public static final int AIR_D_DB_BB_VALUE = 54;
    /**
     * <code>STAND_D_DF_FC = 55;</code>
     */
    public static final int STAND_D_DF_FC_VALUE = 55;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GrpcAction valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GrpcAction forNumber(int value) {
      switch (value) {
        case 0: return NEUTRAL;
        case 1: return STAND;
        case 2: return FORWARD_WALK;
        case 3: return DASH;
        case 4: return BACK_STEP;
        case 5: return CROUCH;
        case 6: return JUMP;
        case 7: return FOR_JUMP;
        case 8: return BACK_JUMP;
        case 9: return AIR;
        case 10: return STAND_GUARD;
        case 11: return CROUCH_GUARD;
        case 12: return AIR_GUARD;
        case 13: return STAND_GUARD_RECOV;
        case 14: return CROUCH_GUARD_RECOV;
        case 15: return AIR_GUARD_RECOV;
        case 16: return STAND_RECOV;
        case 17: return CROUCH_RECOV;
        case 18: return AIR_RECOV;
        case 19: return CHANGE_DOWN;
        case 20: return DOWN;
        case 21: return RISE;
        case 22: return LANDING;
        case 23: return THROW_A;
        case 24: return THROW_B;
        case 25: return THROW_HIT;
        case 26: return THROW_SUFFER;
        case 27: return STAND_A;
        case 28: return STAND_B;
        case 29: return CROUCH_A;
        case 30: return CROUCH_B;
        case 31: return AIR_A;
        case 32: return AIR_B;
        case 33: return AIR_DA;
        case 34: return AIR_DB;
        case 35: return STAND_FA;
        case 36: return STAND_FB;
        case 37: return CROUCH_FA;
        case 38: return CROUCH_FB;
        case 39: return AIR_FA;
        case 40: return AIR_FB;
        case 41: return AIR_UA;
        case 42: return AIR_UB;
        case 43: return STAND_D_DF_FA;
        case 44: return STAND_D_DF_FB;
        case 45: return STAND_F_D_DFA;
        case 46: return STAND_F_D_DFB;
        case 47: return STAND_D_DB_BA;
        case 48: return STAND_D_DB_BB;
        case 49: return AIR_D_DF_FA;
        case 50: return AIR_D_DF_FB;
        case 51: return AIR_F_D_DFA;
        case 52: return AIR_F_D_DFB;
        case 53: return AIR_D_DB_BA;
        case 54: return AIR_D_DB_BB;
        case 55: return STAND_D_DF_FC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GrpcAction>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GrpcAction> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GrpcAction>() {
            public GrpcAction findValueByNumber(int number) {
              return GrpcAction.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return protoc.EnumProto.getDescriptor().getEnumTypes().get(3);
    }

    private static final GrpcAction[] VALUES = values();

    public static GrpcAction valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GrpcAction(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:service.GrpcAction)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nenum.proto\022\007service*)\n\016GrpcStatusCode\022" +
      "\013\n\007SUCCESS\020\000\022\n\n\006FAILED\020\001*b\n\010GrpcFlag\022\t\n\005" +
      "EMPTY\020\000\022\016\n\nINITIALIZE\020\001\022\016\n\nINIT_ROUND\020\002\022" +
      "\016\n\nPROCESSING\020\003\022\r\n\tROUND_END\020\004\022\014\n\010GAME_E" +
      "ND\020\005*M\n\tGrpcState\022\017\n\013STAND_STATE\020\000\022\020\n\014CR" +
      "OUCH_STATE\020\001\022\r\n\tAIR_STATE\020\002\022\016\n\nDOWN_STAT" +
      "E\020\003*\331\006\n\nGrpcAction\022\013\n\007NEUTRAL\020\000\022\t\n\005STAND" +
      "\020\001\022\020\n\014FORWARD_WALK\020\002\022\010\n\004DASH\020\003\022\r\n\tBACK_S" +
      "TEP\020\004\022\n\n\006CROUCH\020\005\022\010\n\004JUMP\020\006\022\014\n\010FOR_JUMP\020" +
      "\007\022\r\n\tBACK_JUMP\020\010\022\007\n\003AIR\020\t\022\017\n\013STAND_GUARD" +
      "\020\n\022\020\n\014CROUCH_GUARD\020\013\022\r\n\tAIR_GUARD\020\014\022\025\n\021S" +
      "TAND_GUARD_RECOV\020\r\022\026\n\022CROUCH_GUARD_RECOV" +
      "\020\016\022\023\n\017AIR_GUARD_RECOV\020\017\022\017\n\013STAND_RECOV\020\020" +
      "\022\020\n\014CROUCH_RECOV\020\021\022\r\n\tAIR_RECOV\020\022\022\017\n\013CHA" +
      "NGE_DOWN\020\023\022\010\n\004DOWN\020\024\022\010\n\004RISE\020\025\022\013\n\007LANDIN" +
      "G\020\026\022\013\n\007THROW_A\020\027\022\013\n\007THROW_B\020\030\022\r\n\tTHROW_H" +
      "IT\020\031\022\020\n\014THROW_SUFFER\020\032\022\013\n\007STAND_A\020\033\022\013\n\007S" +
      "TAND_B\020\034\022\014\n\010CROUCH_A\020\035\022\014\n\010CROUCH_B\020\036\022\t\n\005" +
      "AIR_A\020\037\022\t\n\005AIR_B\020 \022\n\n\006AIR_DA\020!\022\n\n\006AIR_DB" +
      "\020\"\022\014\n\010STAND_FA\020#\022\014\n\010STAND_FB\020$\022\r\n\tCROUCH" +
      "_FA\020%\022\r\n\tCROUCH_FB\020&\022\n\n\006AIR_FA\020\'\022\n\n\006AIR_" +
      "FB\020(\022\n\n\006AIR_UA\020)\022\n\n\006AIR_UB\020*\022\021\n\rSTAND_D_" +
      "DF_FA\020+\022\021\n\rSTAND_D_DF_FB\020,\022\021\n\rSTAND_F_D_" +
      "DFA\020-\022\021\n\rSTAND_F_D_DFB\020.\022\021\n\rSTAND_D_DB_B" +
      "A\020/\022\021\n\rSTAND_D_DB_BB\0200\022\017\n\013AIR_D_DF_FA\0201\022" +
      "\017\n\013AIR_D_DF_FB\0202\022\017\n\013AIR_F_D_DFA\0203\022\017\n\013AIR" +
      "_F_D_DFB\0204\022\017\n\013AIR_D_DB_BA\0205\022\017\n\013AIR_D_DB_" +
      "BB\0206\022\021\n\rSTAND_D_DF_FC\0207B2\n\006protocB\tEnumP" +
      "rotoP\000\252\002\032DareFightingICE.Grpc.Protob\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
